{"version":3,"sources":["ng://fuui/lib/components/icon/icon.component.ts","ng://fuui/lib/components/button/button-variety.ts","ng://fuui/lib/components/button/button.component.ts","ng://fuui/lib/components/navigation/navigation-item/navigation-item.component.ts","ng://fuui/lib/components/input/input.component.ts","ng://fuui/lib/components/input/input-control.component.ts","ng://fuui/lib/components/dialog/dialog.component.ts","ng://fuui/lib/components/dialog/dialog-body/dialog-body.component.ts","ng://fuui/lib/components/dialog/dialog-footer/dialog-footer.component.ts","ng://fuui/lib/components/dialog/dialog-header/dialog-header.component.ts","ng://fuui/lib/components/fab/fab.component.ts","ng://fuui/lib/fuui.module.ts"],"names":["IconComponent","Component","args","selector","template","ButtonComponent","this","variety","ButtonVariety","Object","defineProperty","prototype","content","nativeElement","innerText","trim","ngOnChanges","changes","onVarietyChange","varietyClass","Input","ViewChild","NavigationItemComponent","active","InputComponent","type","title","value","invalidHint","valueChange","EventEmitter","focus","valid","invalid","onInput","e","emit","onFocus","Output","InputControlComponent","inputValue","onChangeCallback","onTouchedCallback","validate","c","writeValue","registerOnChange","fn","registerOnTouched","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","DialogComponent","backgropClose","activeChange","backdropClick","DialogBodyComponent","DialogFooterComponent","DialogHeaderComponent","FabComponent","FuuiModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent { }\r\n","export enum ButtonVariety {\r\n  BASIC = 'basic',\r\n  CONTAINED = 'contained'\r\n}\r\n","import { ButtonVariety } from './button-variety';\r\nimport { Component, Input, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnChanges {\r\n  @Input() variety: ButtonVariety = ButtonVariety.BASIC;\r\n  @Input() form: string;\r\n\r\n  @ViewChild('content') content: ElementRef;\r\n\r\n  varietyClass: string;\r\n\r\n  get showText(): boolean {\r\n    return this.content && !!this.content.nativeElement.innerText.trim();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.variety) {\r\n      this.onVarietyChange();\r\n    }\r\n  }\r\n\r\n  private onVarietyChange(): void {\r\n    switch (this.variety) {\r\n      case ButtonVariety.CONTAINED:\r\n        this.varietyClass = 'fuui-button_contained';\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-navigation-item',\r\n  templateUrl: './navigation-item.component.html',\r\n  styleUrls: ['./navigation-item.component.scss']\r\n})\r\nexport class NavigationItemComponent {\r\n  @Input() active: boolean = false;\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'fuui-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss']\r\n})\r\nexport class InputComponent {\r\n  @Input() type: string = 'text';\r\n  @Input() title: string = '';\r\n  @Input() value: string = null;\r\n  @Input() invalidHint: boolean = false;\r\n\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() focus: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n  valid: boolean = false;\r\n  invalid: boolean = false;\r\n\r\n  onInput(e: KeyboardEvent, value: string): void {\r\n    this.value = value;\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  onFocus(e: Event) {\r\n    this.focus.emit(e);\r\n  }\r\n}\r\n","import { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl, ValidationErrors } from '@angular/forms';\r\nimport { Component, forwardRef, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'fuui-input-control',\r\n  template: `\r\n    <fuui-input\r\n      [type]=\"type\"\r\n      [title]=\"title\"\r\n      [invalidHint]=\"invalidHint\"\r\n      [(value)]=\"inputValue\"\r\n      (focus)=\"onTouchedCallback()\"\r\n      (valueChange)=\"onChangeCallback($event)\"\r\n      ></fuui-input>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputControlComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => InputControlComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputControlComponent implements ControlValueAccessor {\r\n  @Input() type: string;\r\n  @Input() title: string;\r\n\r\n  invalidHint: boolean = false;\r\n  inputValue: string = null;\r\n\r\n  get value() {\r\n    return this.inputValue;\r\n  }\r\n\r\n  validate(c: FormControl): null | ValidationErrors {\r\n    return null;\r\n  }\r\n\r\n  writeValue(value: string) {\r\n    this.inputValue = value;\r\n  }\r\n\r\n  registerOnChange(fn: Function) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n\r\n  onChangeCallback: Function = () => { };\r\n  onTouchedCallback: Function = () => { };\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  @Input() backgropClose: boolean = false;\r\n  @Input() active: boolean = false;\r\n  @Output() activeChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  backdropClick(): void {\r\n    if (this.backgropClose) {\r\n      this.active = false;\r\n      this.activeChange.emit(false);\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-dialog-body',\r\n  templateUrl: './dialog-body.component.html',\r\n  styleUrls: ['../dialog.component.scss']\r\n})\r\nexport class DialogBodyComponent { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-dialog-footer',\r\n  templateUrl: './dialog-footer.component.html',\r\n  styleUrls: ['../dialog.component.scss']\r\n})\r\nexport class DialogFooterComponent { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-dialog-header',\r\n  templateUrl: './dialog-header.component.html',\r\n  styleUrls: ['../dialog.component.scss']\r\n})\r\nexport class DialogHeaderComponent { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'fuui-fab',\r\n  templateUrl: './fab.component.html',\r\n  styleUrls: ['./fab.component.scss']\r\n})\r\nexport class FabComponent {\r\n  @Input() icon: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IconComponent } from './components/icon/icon.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { NavigationItemComponent } from './components/navigation/navigation-item/navigation-item.component';\r\nimport { InputComponent } from './components/input/input.component';\r\nimport { InputControlComponent } from './components/input/input-control.component';\r\nimport { DialogComponent } from './components/dialog/dialog.component';\r\nimport { DialogBodyComponent } from './components/dialog/dialog-body/dialog-body.component';\r\nimport { DialogFooterComponent } from './components/dialog/dialog-footer/dialog-footer.component';\r\nimport { DialogHeaderComponent } from './components/dialog/dialog-header/dialog-header.component';\r\nimport { FabComponent } from './components/fab/fab.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ButtonComponent,\r\n    FabComponent,\r\n    IconComponent,\r\n    InputComponent,\r\n    InputControlComponent,\r\n    NavigationItemComponent,\r\n\r\n    DialogComponent,\r\n    DialogHeaderComponent,\r\n    DialogBodyComponent,\r\n    DialogFooterComponent\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    FabComponent,\r\n    IconComponent,\r\n    InputComponent,\r\n    InputControlComponent,\r\n    NavigationItemComponent,\r\n\r\n    DialogComponent,\r\n    DialogHeaderComponent,\r\n    DialogBodyComponent,\r\n    DialogFooterComponent\r\n  ]\r\n})\r\nexport class FuuiModule { }\r\n"]}